---
import type { CollectionEntry } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import BasicLayout from './BasicLayout/BasicLayout.astro';
import Header from '@/components/Header.astro';
import { Clock } from 'lucide-react';
import type { Props as BasicHeadProps } from '@/layouts/BasicLayout/BasicHead.astro';
import Footer from '@/components/Footer.astro';

type PostData = CollectionEntry<'blog'>['data'];

interface Props extends PostData {
	readingTime: string;
	metadata: Omit<BasicHeadProps, 'title' | 'description'>;
}

const { title, description, pubDate, updatedDate, heroImage, readingTime, metadata } = Astro.props;
---

<BasicLayout metadata={{ ...metadata, title, description }}>
	<Header />
	<main class="px-4 py-6 sm:py-12">
		<section class="mx-auto max-w-screen-md">
			<div class="mb-8">
				<h1 class="font-extrabold text-4xl w-full">{title}</h1>
				<hr class="mt-2 mb-1" />
				<div class="flex items-center">
					<span class="m-0 font-normal text-muted-foreground">
						<FormattedDate date={pubDate} />
					</span>
					{
						updatedDate && (
							<>
								<span class="px-2"> · </span>
								<div class="italic text-muted-foreground">
									Updated <FormattedDate date={updatedDate} />
								</div>
							</>
						)
					}

					<span class="px-2"> · </span>
					<Clock className="w-4 h-4 mr-1 text-muted-foreground" />
					<span class="m-0 font-normal text-muted-foreground">
						{readingTime} min
					</span>
				</div>
			</div>
			<article
				class:list={[
					'prose prose-md w-full max-w-screen-md font-[system-ui] dark:prose-invert prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-primary prose-img:rounded-md prose-img:shadow-lg mt-8 prose-headings:scroll-mt-[80px] prose-li:my-0',
					'prose-h2:[&_code]:font-bold',

					// inline code
					'prose-inline-code:text-secondary-foreground prose-inline-code:font-light prose-inline-code:border-solid prose-inline-code:border-[1px] prose-inline-code:rounded-sm prose-inline-code:py-[2px] prose-inline-code:px-[3px] prose-inline-code:before:content-none prose-inline-code:after:content-none',
					'prose-inline-code:bg-gray-200 prose-inline-code:border-gray-300 dark:prose-inline-code:bg-gray-700 dark:prose-inline-code:border-gray-700 prose-inline-code:opacity-90',
					// code block
					'prose-pre:font-[monospace] prose-pre:font-normal prose-pre:text-sm prose-pre:px-0 prose-pre:py-3 prose-code-block:flex prose-code-block:flex-col',
					'prose-pre:mx-[calc(-1*16px)] md:prose-pre:mx-0 prose-pre:rounded-none md:prose-pre:rounded-md',
					// code block line
					'prose-code-block-line:w-full prose-code-block-line:px-4',
					// line.diff.remove
					'prose-code-block-line:[:where(line.remove)]:bg-red-500',
					'prose-code-block-line:[.diff]:bg-red-500',
					'',
					// 'prose-code-block-line:bg-red-400',
				]}
			>
				<slot />
			</article>
		</section>
	</main>
	<Footer/>
</BasicLayout>

<style is:global>
	.has-diff {
		span.line {
			padding-left: 1.5rem;
		}
		.diff {
			&:before {
				position: absolute;
				left: 8px;
				color: #ffffff;
				opacity: 0.5;
				font-size: 13px;
			}
			&.add {
				background-color: #00ff0020;
				&:before {
					content: '+';
				}
			}
			&.remove {
				background-color: #ff000020;
				&:before {
					content: '-';
				}
			}
		}
	}
	.has-focused {
		.line {
			filter: blur(0.095rem);
		}
		.focused {
			filter: blur(0);
		}
	}

	.has-highlighted {
		.highlighted {
			background-color: rgba(101, 117, 133, 0.26);
		}
	}
</style>
